#usage-blocks.blocks.clearfix
  #tasks-overview.col-sm-4
    .block
      .icon
        %i.icon-tasks
      .caption
        %h4 #{number_to_human(Setup::Task.any_in(status: Setup::Task::RUNNING_STATUS).count)} running tasks
        -if (value = Setup::Task.where(status: :failed).count) > 0
          - value = number_to_human(value)
          - label = 'failed'
        -elsif (value = Setup::Task.where(status: :broken).count) > 0
          - value = number_to_human(value)
          - label = 'broken'
        -elsif (value = Setup::Task.where(status: :unscheduled).count) > 0
          - value = number_to_human(value)
          - label = 'unscheduled'
        -elsif (value = Setup::Task.where(status: :pending).count) > 0
          - value = number_to_human(value)
          - label = 'pending'
        -else
          - value = 'All'
          - label = 'good'
        %h6 #{value} #{label}
  #auths-overview.col-sm-4
    .block
      .icon
        %i.icon-check
      .caption
        %h4 #{number_to_human(Setup::Authorization.all.count)} authorizations
        -if (value = Setup::Authorization.where(authorized: false).count) > 0
          - value = number_to_human(value)
          - label = 'unauthorized'
        -else
          - value = 'All'
          - label = 'good'
        %h6 #{value} #{label}
  #notif-overview.col-sm-4
    .block
      .icon
        %i.icon-bell
      .caption
        %h4 #{number_to_human(Setup::Notification.dashboard_related()[:total])} notifications
        -if (value = Setup::Notification.dashboard_related()[Setup::Notification.type_color(:error)]) > 0
          - value = number_to_human(value)
          - label = 'errors'
        -elsif (value = Setup::Notification.dashboard_related()[Setup::Notification.type_color(:warning)]) > 0
          - value = number_to_human(value)
          - label = 'warnings'
        -else
          - value = 'All'
          - label = 'good'
        %h6 #{value} #{label}

-##collections-blocks.blocks.clearfix
-#  #favorite-collections.col-sm-12.col-lg-4
-#    .block
-#      %h4 My favorite collections
-#  #trending-collections.col-sm-6.col-lg-4
-#    .block
-#      %h4 Trending collections
-#  #latest-collections.col-sm-6.col-lg-4
-#    .block
-#      %h4 Latest collections
-#
- if @abstract_models
  %table.table.table-condensed.table-striped
    %thead
      %tr
        %th.shrink.model-name= t 'admin.table_headers.model_name'
        %th.records= t "admin.table_headers.records"
        %th.shrink.controls
    %tbody
      - @abstract_models.each do |abstract_model|
        - if authorized? :index, abstract_model
          - index_path = index_path(model_name: abstract_model.to_param)
          - row_class = "#{cycle("odd", "even")}#{" link" if index_path} #{abstract_model.param_key}_links"
          %tr{class: row_class, :"data-link" => index_path}
            - last_used = @most_recent_changes[abstract_model.model.name]
            - active = last_used.try(:today?)
            %td
              %span.show= link_to capitalize_first_letter(abstract_model.config.label_plural), index_path, class: 'pjax'
            %td
              - count = @count[abstract_model.model.name]
              - percent = count > 0 ? (@max <= 1 ? count : ((Math.log(count+1) * 100.0) / Math.log(@max+1)).to_i) : -1
              .progress{style: "margin-bottom:0px", class: "progress-#{get_indicator(percent)} #{active && 'active progress-striped'}"  }
                .progress-bar.animate-width-to{:class => "progress-bar-#{get_indicator(percent)}", :'data-animate-length' => ([1.0, percent].max.to_i * 20), :'data-animate-width-to' => "#{[2.0, percent].max.to_i}%", style: "width:2%"}
                  = @count[abstract_model.model.name]
            %td.links
              %ul.inline.list-inline= menu_for :collection, abstract_model, nil, true
- if @auditing_adapter && authorized?(:history_index)
  #block-tables.block
    .content
      %h2= t("admin.actions.history_index.menu")
      = render partial: 'rails_admin/main/dashboard_history'
