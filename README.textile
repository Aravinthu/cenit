"!https://badges.gitter.im/Join%20Chat.svg!":https://gitter.im/openjaf/cenit?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge "!https://codeclimate.com/github/openjaf/cenit/badges/gpa.svg!":https://codeclimate.com/github/openjaf/cenit

h1. Cenit IO

h2. What is?

Cenit IO is an open source social platform as a service for data and business integration. Cenit IO has been designed to integrate solutions by orchestrating data flows that may involve several APIs. It makes possible 
the automation of all operational processes, connecting legacy apps and internet services.

Allow the creations of custom data pipeline to process, storage and move data between APIs - on premises or public APIs- Flows could be trigger by data events or scheduled time intervals over our platform https://cenit.io

h2. General Feature

* Social networking features to share collections.
* 100% Open Source platform as a service (Open-PaaS).
* Router Logic for redirect documents to different endpoints.
* Powerful transform to translates and modified any formats to any format.
* Dynamic load schemas: XSD, JSON and EDI grammars.
* Export and import integration settings (collections).
* Multi-tenancy with shared-schema database.


h2. Key concepts

* Webhooks
* Connections
* Connection Roles
* Translators
* Algorithms
* Authorizations
* Data Events
* Schedulers
* Flows
* Applications


h2. Loading Schemas & Data Types on flight

* XSD, JSON Schemas and EDI grammars
* Allow add a new Document Type to the Database
* CRUD any data with ease
* Search and filtering
* Export data to CSV/JSON/XML
* User action history

h2. Manage multiple Protocol Authentication

* Basic Auth
* Digest Auth
* OAuth 1.0a
* OAuth 2.0


h2. Shared Collections

There are now over 200 pre-built shared integration collections out the box for connecting 
to internet services, fulfilment solutions, accounting, communications, ERP, multi-channels, etc.

h1. Join us

* Github project: https://github.com/openjaf/cenit
* Email: support@cenit.io
* Website: https://cenit.io

h2. Frameworks and Tools.

* Ruby on Rails
* MongoDB
* Mongoid and Mongoff as Object Document Mapper (ODM)
* rails_admin, for build admin panel.
* RabbitMQ for internal pipeline messages.

h3. Create Cenit IO local server.

Clone the github openjaf/cenit repo and move to cenit folder.

<pre>
$ git clone https://github.com/openjaf/cenit
$ cd cenit
</pre>

Change branch to develop.

<pre>
$ git checkout -b develop origin/develop
</pre>

Ensure stay in develop branch.

<pre>
$ git branch
> *develop
</pre>

Ensure that 'develop' branch is updated.

<pre>
$ git pull origin develop
> Already up-to-date.
</pre>

Run the bundle install command to install the required gems on your computer:

<pre>
$ bundle install
</pre>

With mongodb you don't need run migrations

Run cenit hub by port: 3000

<pre>
$ rails s -p 3000
</pre>

If you have some trouble with secret_key_base running 'rails s', you can generate a random secret key value:

<pre>
$ rake secret
</pre>	

Then take this value and put it in config/initializers/secret_token.rb:

<pre>
Cenit::Application.config.secret_key_base = 'bla' # replace this
</pre>

<pre>
go to http://localhost:3000
</pre>

If you have some trouble check that mondodb is running.

Check that you have a working installation of "RabbitMQ":http://www.rabbitmq.com, see below the guide for install RabbitMQ.

If RabbitMQ is well installed when you run rails server then you can see:

<pre>
 [*] Waiting for messages. To exit press CTRL+C	
</pre>

h2. Dependencies

Before generating your application, you will need:

* The Ruby language (version 1.9.3 or 2.0.0)
* The Rails gem (version 4.0.5)
* A working installation of "MongoDB":http://www.mongodb.org/
* A working installation of "RabbitMQ":http://www.rabbitmq.com


h3. Installing MongoDB

If you don't have MongoDB installed on your computer, you'll need to install it and set it up to be always running on your computer (run at launch).

On Mac OS X, the easiest way to install MongoDB is to install "Homebrew":http://mxcl.github.com/homebrew/ and then run the following:

<pre>
brew install mongodb
</pre>

Homebrew will provide post-installation instructions to get MongoDB running. The last line of the installation output shows you the MongoDB install location (for example, */usr/local/Cellar/mongodb/1.8.0-x86_64*). You'll find the MongoDB configuration file there. After an installation using Homebrew, the default data directory will be */usr/local/var/mongodb*.

On the Debian GNU/Linux operating system, as of March 2013, the latest stable version is MongoDB 2.0.0. With MongoDB 2.0.0, the Mongoid gem must be version 3.0.x. See the "Mongoid installation instructions":http://mongoid.org/en/mongoid/docs/installation.html#installation. Change your Gemfile to use an earlier Mongoid version:

<pre>
gem 'mongoid', github: 'mongoid/mongoid'
gem 'bson_ext', '~> 1.8.6'
</pre>

h3. Installing RabbitMQ

The "RabbitMQ":http://www.rabbitmq.com site has a good "installation guide":http://www.rabbitmq.com/download.html that addresses many operating systems. On Mac OS X, the fastest way to install RabbitMQ is with "Homebrew":http://brew.sh:

<pre>
brew install rabbitmq
</pre>

then run it:

<pre>
rabbitmq-server
</pre>

On Debian and Ubuntu, you can either "download the RabbitMQ .deb package":http://www.rabbitmq.com/download.html and install it with "dpkg":http://www.debian.org/doc/manuals/debian-faq/ch-pkgtools.en.html or make use of the "apt repository":http://www.rabbitmq.com/install-debian.html that the RabbitMQ team provides.

For RPM-based distributions like RedHat or CentOS, the RabbitMQ team provides an "RPM package":http://www.rabbitmq.com/download.html.

<pre>
Note: The RabbitMQ packages that ship with Ubuntu versions earlier than 11.10 are outdated and will not work with Bunny 0.9.0 and later versions (you will need at least RabbitMQ v2.0 for use with this guide).
</pre>

h2. Getting the Application

You have several options for getting the code.

h3. Fork

If you'd like to add features (or bug fixes) to improve the example application, you can fork the GitHub repo and "make pull requests":http://help.github.com/send-pull-requests/. Your code contributions are welcome!

h3. Clone

If you want to copy and customize the app with changes that are only useful for your own project, you can clone the GitHub repo. You'll need to search-and-replace the project name throughout the application. You probably should generate the app instead (see below). To clone:

<pre>
$ git clone https://github.com/openjaf/cenit
</pre>


h4. Web Servers

Use the default WEBrick server for convenience. If you plan to deploy to Heroku, select "thin" as your production webserver.


h4. Other Choices

Set a robots.txt file to ban spiders if you want to keep your new site out of Google search results.

It is a good idea to use "rvm":https://rvm.io/, the Ruby Version Manager, and create a project-specific rvm gemset (not available on Windows). See "Installing Rails":http://railsapps.github.io/installing-rails.html.

If you choose to create a GitHub repository, the generator will prompt you for a GitHub username and password.

h4. Troubleshooting

Other problems? Check the "issues" https://github.com/openjaf/cenit.

h3. Edit the README

If you're storing the app in a GitHub repository, please edit the README files to add a description of the app and your contact info. If you don't change the README, people will think we are the author of your version of the application.

h2. Getting Started

h3. Install the Required Gems

Check the Gemfile to see which gems are used by this application.

<pre>
$ bundle install
</pre>

You can check which gems are installed on your computer with:

<pre>
$ gem list
</pre>

Keep in mind that you have installed these gems locally. When you deploy the app to another server, the same gems (and versions) must be available.

I recommend using "rvm":https://rvm.io/, the Ruby Version Manager, to create a project-specific gemset for the application. See the article "Installing Rails":http://railsapps.github.io/installing-rails.html.

h3. Configure Mongoid

Mongoid provides access to the MongoDB database from Rails.

You can use the default configuration found in the file *config/mongoid.yml*.

If you want to see what's in your MongoDB databases, I recommend using the "MongoHub":http://mongohub.todayclose.com/ app (for Mac OS X).S

h3. Configuration File

The application uses the "figaro gem":https://github.com/laserlemon/figaro to set environment variables. Credentials for your administrator account and email account are set in the *config/application.yml* file. The *.gitignore* file prevents the *config/application.yml* file from being saved in the git repository so your credentials are kept private. See the article "Rails Environment Variables":http://railsapps.github.io/rails-environment-variables.html for more information.

Modify the file *config/application.yml*:

<pre>
# Add account credentials and API keys here.
# See http://railsapps.github.io/rails-environment-variables.html
# This file should be listed in .gitignore to keep your settings secret!
# Each entry sets a local environment variable and overrides ENV variables in the Unix shell.
# Add application configuration variables here, as shown below.
</pre>

If you wish, set your name, email address, and password for the first user's account. If you prefer, you can use the default to sign in to the application and edit the account after deployment. It is always a good idea to change the password after the application is deployed.

All configuration values in the *config/application.yml* file are available anywhere in the application as environment variables. For example, @ENV["GMAIL_USERNAME"]@ will return the string "Your_Username".

If you prefer, you can delete the *config/application.yml* file and set each value as an environment variable in the Unix shell.

h2. Contributing

If you make improvements to this application, please share with others.

Send the author a message, create an "issue":https://github.com/openjaf/cenit/issues, or fork the project and submit a pull request.

If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I'll add a note to the README so that others can find your work.


h4. Contributors

Thank you for improvements to the application:

* "Maikel Arcia":https://github.com/macarci
* "Miguel Sancho":https://github.com/sanchojaf
* "Asnioby Hdez":https://github.com/asnioby
* "Daniel H. Bahr":https://github.com/dhbahr
* "Maria E. Guirola":https://github.com/maryguirola
* "Cesar Lage":https://github.com/kaerdsar
* "Maykell Sanchez":https://github.com/kellsaro
* "José A. Cruz":https://github.com/jalbertcruz

h2. MIT License

"MIT License":http://www.opensource.org/licenses/mit-license


h2. Useful Links

Cenit IO: https://cenit.io


